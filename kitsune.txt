//+------------------------------------------------------------------+
//|                                            HedgingSystem1.03.mq4 |
//|      Sanctuary Mirror, Copyright 2017, MetaQuotes Software Corp. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Sanctuary Mirror, Copyright 2017, MetaQuotes Software Corp."
#property link      "https://www.mql5.com"
#property version   "1.11"
#property strict
//zmienne zewnetrzne
input int takeprofit = 15; // Podaj TP
input int recoveryzone = 20; // Reco-Zone [MUSI BYC]
input double lotsize = 0.01; //wprowadz wielkosc pierwszej pozycji
input double multi = 3; // multiplier pozycji [1.4, max agresywny na 1.6]
extern int Slippage = 10;


int Slip;
double UsePoint;
double CalcPoint;
double CalcSlippage;

int Zlecenia(int kontrolazamykania=0)
{
         for (int i=0; i<=OrdersTotal();i++)
         if (OrderSelect(i, SELECT_BY_POS, MODE_TRADES) == true)
         if (OrderSymbol()== Symbol())
        {
         if (OrderType() == OP_BUY || OrderType() == OP_SELL || OrderType() == OP_BUYSTOP || OrderType() == OP_SELLSTOP)
            kontrolazamykania++;    
            }
         else if (OrderType() == OP_SELLLIMIT || OP_BUYLIMIT)
         {
            } 
     return (kontrolazamykania);
}
      
   bool bKierunek(bool x=0)
   {
      for (int i=0; i<=OrdersTotal(); i++)
      if (OrderSelect(i, SELECT_BY_POS, MODE_TRADES) == true)
      if (OrderSymbol()== Symbol())
      {
         if (OrderType() == OP_BUY ||OrderType() ==  OP_BUYSTOP ||OrderType() ==  OP_BUYLIMIT)
         x=1;
         else if (OrderType() == OP_SELL ||OrderType() ==  OP_SELLSTOP ||OrderType() ==  OP_SELLLIMIT)
         x=0;
      }
      return(x);
   }
   
 int Total(int x=0)
   {
      for( int i=0; i<=OrdersTotal();i++)
         if (OrderSelect(i,SELECT_BY_POS,MODE_TRADES) == true)
         if (OrderSymbol()== Symbol())
            {
            if (OrderType() == OP_BUY ||OrderType()==  OP_SELL ||OrderType() == OP_BUYSTOP ||OrderType()==  OP_SELLSTOP||OrderType()==  OP_BUYLIMIT || OrderType()==  OP_SELLLIMIT)
            x++;
            }
      return(x);
   }

   int OrderCheck(int x=0)
   {
      for( int i=0; i<=OrdersTotal();i++)
         if (OrderSelect(i,SELECT_BY_POS,MODE_TRADES) == true)
         if (OrderSymbol()== Symbol())
         {
            if (OrderType() == OP_BUY ||OrderType()==  OP_SELL)
            x++;
         else if (OrderType() == OP_BUYSTOP ||OrderType()==  OP_SELLSTOP||OrderType()==  OP_BUYLIMIT || OrderType()==  OP_SELLLIMIT)
         continue;
         }
         return(x);
   }
   
   double PipPoint(string Currency)
   {
      int CalcDigits = MarketInfo(Currency,MODE_DIGITS);
      if(CalcDigits == 2 || CalcDigits == 3) CalcPoint = 0.01;
      else if(CalcDigits == 4 || CalcDigits == 5) CalcPoint = 0.0001;
      return(CalcPoint);
   }
   
   int GetSlippage(string Currency, int SlippagePips)
   {
      int CalcDigits = MarketInfo(Currency,MODE_DIGITS);
      if(CalcDigits == 2 || CalcDigits == 3) CalcSlippage = SlippagePips;
      else if(CalcDigits == 4 || CalcDigits == 5) CalcSlippage = SlippagePips * 10;
      return(CalcSlippage);
   }
//+------------------------------------------------------------------+
//| Expert initialization function                                   |
//+------------------------------------------------------------------+
int OnInit()
  {
//---


//---
   return(INIT_SUCCEEDED);
  }
  
//+------------------------------------------------------------------+
//| Expert deinitialization function                                 |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
  {
//---
   
  }
//+------------------------------------------------------------------+
//| Expert tick function                                             |
//+------------------------------------------------------------------+
void OnTick()
{
            UsePoint = PipPoint(Symbol());
            Slip = GetSlippage(Symbol(), Slippage);
            int zleceniaotwarte = OrderCheck();
            double cenaotwarciabuy=Ask+(recoveryzone*UsePoint);
            double cenaotwarciasell=Bid-(recoveryzone*UsePoint);
            double cenaaktualnaBUY=Bid;
            double cenaaktualnaSELL=Ask;
            double BuyTakeProfit = cenaotwarciabuy + (takeprofit * UsePoint);
            double SellTakeProfit = cenaotwarciasell - (takeprofit * UsePoint);
            bool Kierunek=bKierunek();
            int kontrolazamykania = Zlecenia();
            int iTotal=Total();
            double dSumaLotBuy=0;
            double dSumaLotSELL=0;
   RefreshRates();
 
   
   if (zleceniaotwarte>0)
   {
     for   (int i=0;i<=OrdersTotal();i++)
   {
      if(OrderSelect(i,SELECT_BY_POS,MODE_TRADES) == true)
      if(OrderSymbol()== Symbol())
      if(OrderType() == OP_BUY || OrderType() == OP_BUYSTOP)
      {
         dSumaLotBuy+= OrderLots();
      }
      else if(OrderType()== OP_SELL || OrderType() == OP_SELLSTOP)
      {
      dSumaLotSELL+= OrderLots();
      }
   }
      for (int i=0; i<=OrdersTotal();i++)
      if (OrderSelect(i, SELECT_BY_POS, MODE_TRADES) == true)
      if (OrderSymbol()== Symbol())
      {
         if (OrderType()==OP_BUY||OrderType()==OP_BUYSTOP)
         {
         cenaotwarciabuy= OrderOpenPrice();
         cenaotwarciasell=OrderOpenPrice() - (recoveryzone*UsePoint);
         BuyTakeProfit=OrderTakeProfit();
         SellTakeProfit=OrderStopLoss();
         break;
         }
         else if (OrderType()== OP_SELL||OrderType()==OP_SELLSTOP)
         {
         cenaotwarciasell=OrderOpenPrice();
         cenaotwarciabuy= OrderOpenPrice()+(recoveryzone*UsePoint);
         BuyTakeProfit=OrderStopLoss();
         SellTakeProfit=OrderTakeProfit();
         break;
         }
      }  
   }
   else if (zleceniaotwarte<=0)
   {
   int ticket=OrderSend(Symbol(), OP_SELL,lotsize, Ask, 10, Ask+((recoveryzone+takeprofit)*UsePoint),Ask-(takeprofit*UsePoint), "NULL", 5, 0, clrNONE);
                           if(ticket<0)
                           {
                           Print("OrderSend failed with error #",GetLastError());
                           return;
                           }
                           else
                           {
                           Print("OrderSend placed successfully");
                           cenaotwarciabuy= Ask+ (recoveryzone * UsePoint);
                           SellTakeProfit= Ask-(takeprofit*UsePoint);
                           BuyTakeProfit=Ask+((recoveryzone+takeprofit)*UsePoint);
                           RefreshRates();
                           return;
                           }
   RefreshRates();
   }
   if (zleceniaotwarte>0 && zleceniaotwarte<2 && iTotal>1 && iTotal<3)
   {
      RefreshRates();
      if (Kierunek<1 && Bid>=cenaotwarciabuy+(recoveryzone*UsePoint))
     {
                  Slip = GetSlippage(Symbol(), Slippage);
                  for (int i=OrdersTotal()-1; i >=0; i--)
                  {
                  if (OrderSelect(i,SELECT_BY_POS,MODE_TRADES) == true)
                  if (OrderSymbol()== Symbol())
                  if (OrderType()== OP_BUYSTOP ||OrderType()==  OP_SELLSTOP ||OrderType()==  OP_BUYLIMIT ||OrderType()==  OP_SELLLIMIT)
                  {
                  bool x=OrderDelete(OrderTicket());
                  if (OrderDelete(OrderTicket())==false)
                  Print("OrderDelete failed with error #",GetLastError());
                  else if (OrderDelete(OrderTicket())==true)
                  Print ("OrderDelete succeed.");
                  } 
                  if (OrderType()== OP_BUY)
                  bool z=OrderClose(OrderTicket(),OrderLots(), Bid, Slippage*Slip, clrNONE);
                  if (OrderType()==OP_SELL)
                  bool y=OrderClose(OrderTicket(), OrderLots(), Ask, Slippage*Slip, clrNONE);    
                  }
                           int ticket=OrderSend(Symbol(), OP_SELL,lotsize, Bid, 10, Bid+(recoveryzone*UsePoint)+(takeprofit*UsePoint), Bid-(takeprofit*UsePoint), "NULL", 5, 0, clrNONE);
                           if(ticket<0)
                           {
                           Print("OrderSend failed with error #",GetLastError());
                           return;
                           }
                           else
                           {
                           Print("OrderSend placed successfully");
                           cenaotwarciabuy= cenaotwarciasell+ (recoveryzone * UsePoint);
                           return;
                           }
          }
       else if (Kierunek>0 && Ask<=cenaotwarciasell-(recoveryzone*UsePoint))
       {
                     RefreshRates();
                     Slip = GetSlippage(Symbol(), Slippage);
                     for (int i=OrdersTotal()-1; i >= 0; i--)
     {
     if (OrderSelect(i,SELECT_BY_POS,MODE_TRADES) == true)
     if (OrderSymbol()== Symbol())
     if (OrderType()== OP_BUYSTOP ||OrderType()==  OP_SELLSTOP ||OrderType()==  OP_BUYLIMIT ||OrderType()==  OP_SELLLIMIT)
     {
      bool x=OrderDelete(OrderTicket());
      if (OrderDelete(OrderTicket())==false)
      Print("OrderDelete failed with error #",GetLastError());
      else if (OrderDelete(OrderTicket())==true)
      Print ("OrderDelete succeed.");
     } 
     if (OrderType()== OP_BUY)
     bool z=OrderClose(OrderTicket(),OrderLots(), Bid, Slippage*Slip, clrNONE);
     if (OrderType()==OP_SELL)
     bool y=OrderClose(OrderTicket(), OrderLots(), Ask, Slippage*Slip, clrNONE);
     }
     int ticket=OrderSend(Symbol(), OP_BUY,lotsize, Ask, 10, Ask-(recoveryzone*UsePoint)-(takeprofit*UsePoint), Ask+(takeprofit*UsePoint), "NULL", 5, 0, clrNONE);
     if(ticket<0)
             {
             Print("OrderSend failed with error #",GetLastError());
             return;
             }
             else
             {
             Print("OrderSend placed successfully");
             cenaotwarciabuy= cenaotwarciasell+ (recoveryzone * UsePoint);
             return;
             }
           } 
               RefreshRates();
    }
    
    if (zleceniaotwarte >= iTotal) 
    {     
               if (zleceniaotwarte>0 && zleceniaotwarte<2 && iTotal>0 && iTotal<2)
              {
              RefreshRates();
                  UsePoint=PipPoint(Symbol());
                 Slip=GetSlippage(Symbol(), Slippage);
                     
                  
                  if (Kierunek<1)
                  {
                     int ticket=OrderSend(Symbol(), OP_BUYSTOP,(dSumaLotSELL*multi), cenaotwarciabuy, 10, SellTakeProfit, BuyTakeProfit, "NULL", 3, 0, clrNONE);
                        if(ticket<0)
                        {
                        Print("OrderSend failed with error #",GetLastError());
                        return;
                        }
                        else
                        {
                        Print("OrderSend placed successfully");
                        return;
                        }
                           RefreshRates();
                  }
                  else if (Kierunek>0)
               
                  {
                     int ticket=OrderSend(Symbol(), OP_SELLSTOP, (dSumaLotBuy*multi), cenaotwarciasell, 10, BuyTakeProfit, SellTakeProfit, "NULL", 3, 0, clrNONE);
                        if(ticket<0)
                        {
                        Print("OrderSend failed with error #",GetLastError());
                        return;
                        }
                        else
                        {
                        Print("OrderSend placed successfully");
                        return;
                        }
                  }     
                  RefreshRates();
               }
               if (zleceniaotwarte>1 && zleceniaotwarte>=iTotal)
               RefreshRates();
               {   
               if (Kierunek<1)
               {
               UsePoint=PipPoint(Symbol());
               Slip=GetSlippage(Symbol(), Slippage);
                  { 
                     int ticket=OrderSend(Symbol(), OP_BUYSTOP,(dSumaLotSELL*multi)-dSumaLotBuy , cenaotwarciabuy, 10, SellTakeProfit, BuyTakeProfit, "NULL", 5, 0, clrNONE);
                        if(ticket<0)
                        {
                        Print("OrderSend failed with error #",GetLastError());
                        return;
                        }
                        else
                        {
                        Print("OrderSend placed successfully");
                        return;
                        }
                  }
                  RefreshRates();
               }      
               if (Kierunek>0)
               
                  {
                  UsePoint = PipPoint(Symbol());
                  Slip = GetSlippage(Symbol(),Slippage);
                     {
                     int ticket=OrderSend(Symbol(), OP_SELLSTOP, (dSumaLotBuy*multi)-dSumaLotSELL, cenaotwarciasell, 10, BuyTakeProfit, SellTakeProfit, "NULL", 5, 0, clrNONE);
                        if(ticket<0)
                        {
                        Print("OrderSend failed with error #",GetLastError());
                        return;
                        }
                        else
                        {
                        Print("OrderSend placed successfully");
                        return;
                        }
                        RefreshRates();
                     }               
                  }
                  }
                  }
         if (zleceniaotwarte < iTotal)
         {
      for (int i=0; i<=OrdersTotal();i++)
      if (OrderSelect(i, SELECT_BY_POS, MODE_TRADES) == true)
      if (OrderSymbol()== Symbol())
      {
         if (OrderType()==OP_BUY||OrderType()==OP_BUYSTOP)
         {
         cenaotwarciabuy= OrderOpenPrice();
         cenaotwarciasell=OrderOpenPrice() - (recoveryzone*UsePoint);
         break;
         }
         else if (OrderType()== OP_SELL||OrderType()==OP_SELLSTOP)
         {
         cenaotwarciasell=OrderOpenPrice();
         cenaotwarciabuy= OrderOpenPrice()+(recoveryzone*UsePoint);
         break;
         }
         }

            RefreshRates();
            
            if (Ask >= BuyTakeProfit)
   {
   Slip = GetSlippage(Symbol(), Slippage);
     for (int i=OrdersTotal()-1; i >= 0; i--)
     {
     if (OrderSelect(i,SELECT_BY_POS,MODE_TRADES) == true)
     if (OrderSymbol()== Symbol())
     if (OrderType()== OP_BUYSTOP ||OrderType()==  OP_SELLSTOP ||OrderType()==  OP_BUYLIMIT ||OrderType()==  OP_SELLLIMIT)
     {
     bool x=OrderDelete(OrderTicket());
     if (OrderDelete(OrderTicket())==false)
     Print("OrderDelete failed with error #",GetLastError());
     else if (OrderDelete(OrderTicket())==true)
     Print ("OrderDelete succeed.");
     }
     if (OrderType()== OP_BUY)
     bool z=OrderClose(OrderTicket(),OrderLots(), Bid, Slippage*Slip, clrNONE);
     if (OrderType()==OP_SELL)
     bool y=OrderClose(OrderTicket(), OrderLots(), Ask, Slippage*Slip, clrNONE);
     }
     int ticket=OrderSend(Symbol(), OP_SELL,lotsize, Bid, 10, Bid+(recoveryzone*UsePoint)+(takeprofit*UsePoint), Bid-(takeprofit*UsePoint), "NULL", 5, 0, clrNONE);
     if(ticket<0)
             {
             Print("OrderSend failed with error #",GetLastError());
             return;
             }
             else
             {
             Print("OrderSend placed successfully");
             cenaotwarciabuy= cenaotwarciasell+ (recoveryzone * UsePoint);
             SellTakeProfit= cenaotwarciasell-(takeprofit*UsePoint);
             BuyTakeProfit=cenaotwarciabuy+(takeprofit*UsePoint);
             return;
             }
             RefreshRates();
             }
   
     if ( Bid <= SellTakeProfit)
     {
     Slip = GetSlippage(Symbol(), Slippage);
     for (int i=OrdersTotal()-1; i >= 0; i--)
     {
     if (OrderSelect(i,SELECT_BY_POS,MODE_TRADES) == true)
     if (OrderSymbol()== Symbol())
     if (OrderType()== OP_BUYSTOP ||OrderType()==  OP_SELLSTOP ||OrderType()==  OP_BUYLIMIT ||OrderType()==  OP_SELLLIMIT)
     {
     bool x=OrderDelete(OrderTicket());
     if (OrderDelete(OrderTicket())==false)
     Print("OrderDelete failed with error #",GetLastError());
     else if (OrderDelete(OrderTicket())==true)
     Print ("OrderDelete succeed.");
     } 
     if (OrderType()== OP_BUY)
     bool z=OrderClose(OrderTicket(),OrderLots(), Bid, Slippage*Slip, clrNONE);
     if (OrderType()==OP_SELL)
     bool y=OrderClose(OrderTicket(), OrderLots(), Ask, Slippage*Slip, clrNONE);
     }
      int ticket=OrderSend(Symbol(), OP_BUY,lotsize, Ask, 10, Ask-(recoveryzone*UsePoint)-(takeprofit*UsePoint), Ask+(takeprofit*UsePoint), "NULL", 5, 0, clrNONE);
      if(ticket<0)
         {
         Print("OrderSend failed with error #",GetLastError());
         return;
         }
         else
         {
         Print("OrderSend placed successfully");
         cenaotwarciasell= cenaotwarciabuy- (recoveryzone * UsePoint);
         SellTakeProfit= cenaotwarciasell-(takeprofit*UsePoint);
         BuyTakeProfit=cenaotwarciabuy+(takeprofit*UsePoint);
         return;
         }
     }
RefreshRates();    
}
RefreshRates();
return;
}
//---
